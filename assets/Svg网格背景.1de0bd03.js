import{g as s,o as a,c as t,h as p}from"./index.575f4d7e.js";const o={class:"prose prose-sm m-auto text-left"},e=p(`<h1>Svg\u7F51\u683C\u80CC\u666F</h1><blockquote><p>\u5B66\u4E60 <a href="https://yqnn.github.io/svg-path-editor/" target="_blank" rel="noopener">svg-path-editor</a> \u6E90\u7801</p></blockquote><ul><li>\u7F51\u683C\u80CC\u666F</li><li>\u683C\u5B50\u5C3A\u5BF8\u9002\u5E94 svg \u7684\u5927\u5C0F</li><li>\u80CC\u666F\u5C3A\u5BF8\u9002\u5E94 dom \u7684\u5C3A\u5BF8</li><li>\u652F\u6301\u9F20\u6807\u6EDA\u8F6E wheel \u653E\u5927\u7F29\u5C0F</li><li>\u652F\u6301\u7A97\u53E3 resize \u81EA\u9002\u5E94</li></ul><h2>1.\u521B\u5EFA\u4E00\u4E2A Dom Container \uFF08\u7236\u7EC4\u4EF6\uFF09</h2><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex flex-row w-screen h-screen bg-[#f7f7f7] dark:bg-[#222222] text-[#374151] dark:text-[#e5e7eb] <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> w-full h-full min-w-10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Canvas</span>
        <span class="token attr-name">:viewPortWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cfg.viewPortWidth<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:viewPortHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cfg.viewPortHeight<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:viewPortX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cfg.viewPortX<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:viewPortY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cfg.viewPortY<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:strokeWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:canvasWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvasWidth<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:canvasHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvasHeight<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:rawPath</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kDefaultPath<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Canvas</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> absolute left-[calc(50%-80px)] bottom-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Footer</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><h2>2.\u521B\u5EFACanvas.vue\u7EC4\u4EF6 \u2013 Svg\u683C\u5B50\u753B\u5E03 \uFF08\u5B50\u7EC4\u4EF6\uFF09</h2><ul><li>\u4E3B\u8981\u4E00\u4E2A svg \u6807\u7B7E\uFF0C\u548C\u56DB\u4E2A line \u6807\u7B7E\u3002</li><li>\u56DB\u4E2A line \u5206\u522B\u4EE3\u8868\u7740 x \u8F74\u3001 y\u8F74\u548C \u904D\u5386\u51FA\u6765\u7684 \u5E73\u884C\u4E8E x \u8F74 \u548C \u5E73\u884C\u4E8E y \u8F74\u7684\u76F4\u7EBF</li><li>\u4E3B\u8981\u6709\u51E0\u4E2A\u503C viewPortX \u3001viewPortY \u3001viewPortWidth \u3001viewPortHeight\u3001strokeWidth\u3001canvasWidth\u3001canvasHeight</li><li>\u5BF9\u4E8E svg \u6807\u7B7E\uFF0C\u6709\u4E00\u4E2A\u53D8\u91CF viewBox</li><li>\u5BF9\u4E8E line \u6807\u7B7E\uFF0C \u6709\u56DB\u4E2A\u53D8\u91CF x1 \u3001y1 \u3001 x2 \u3001y2</li></ul><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>
    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewPortX+&#39; &#39;+viewPortY+&#39; &#39;+viewPortWidth+&#39; &#39;+viewPortHeight<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span>
      <span class="token attr-name">:x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortX<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortX + props.viewPortWidth<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#99999990<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth * 4<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span>
      <span class="token attr-name">:x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortY<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortY + props.viewPortHeight<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#99999990<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth * 4<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span>
      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in xGrid<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortY<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortY + props.viewPortHeight<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#99999990<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span>
      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in yGrid<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortX<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.viewPortX + props.viewPortWidth<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#99999990<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><h2>3. \u5B50\u7EC4\u4EF6\u6E32\u67D3 line</h2><p>\u5B50\u7EC4\u4EF6 Canvas.vue \u4E2D\u7684\u76EE\u7684\u5F88\u660E\u663E\uFF0C\u5C31\u662F\u8BA1\u7B97 line\u7684\u6570\u91CF\u6E32\u67D3\u3002 \u6839\u636E\u53EF\u89C6\u8303\u56F4\u7684\u5BBD\u9AD8\u53BB\u8BA1\u7B97\u6709\u591A\u5C11\u6761\u76F4\u7EBF\u6E32\u67D3\u5C31\u5B8C\u4E86\u3002</p><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  viewPortX<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  viewPortY<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  viewPortWidth<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  viewPortHeight<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  strokeWidth<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  canvasWidth<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  canvasHeight<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> xGrid <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> yGrid <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">watch</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> props<span class="token punctuation">.</span>viewPortWidth <span class="token operator">&lt;=</span> props<span class="token punctuation">.</span>canvasWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xGrid<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>viewPortWidth<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>viewPortX<span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">)</span>
    yGrid<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>viewPortHeight<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>viewPortY<span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    xGrid<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    yGrid<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> immediate<span class="token operator">:</span><span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><h2>4.\u7236\u7EC4\u4EF6\u4E2D\u8BA1\u7B97\u53EF\u89C6\u8303\u56F4</h2><ul><li>\u521D\u59CB\u5316\u5B9A\u4E49\u53D8\u91CF\uFF0C\u753B\u6B65\u9ED8\u8BA4\u5C3A\u5BF8\u4E3A 100*100\u3002</li><li>\u521D\u59CB\u5316\u5173\u952E\u53D8\u91CF\uFF0C\u89C6\u56FE\u5BBD\u9AD8\u3001\u539F\u70B9\u4F4D\u7F6E\u3001\u7EBF\u5BBD\u3001\u83B7\u53D6canvas\u7684dom\u53CA\u5176\u8981\u7D20\u53D8\u91CF</li></ul><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> canvasWidth <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> canvasHeight <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> cfg <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  viewPortX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  viewPortY<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  viewPortWidth<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  viewPortHeight<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> strokeWidth <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useElementBounding</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>
</code></pre><ul><li>\u521B\u5EFA\u51FD\u6570\uFF0C\u66F4\u65B0\u8FD9\u51E0\u4E2A\u5173\u952E\u7684\u89C6\u56FE\u503C</li></ul><pre class="language-ts"><code class="language-ts"><span class="token comment">/**
 * \u66F4\u65B0\u89C6\u56FE ViewPort
 * @param x left
 * @param y top
 * @param w \u5BBD
 * @param h \u9AD8
 * @param force \u662F\u5426\u9501\u5B9A
 */</span>
<span class="token keyword">function</span> <span class="token function">updateViewPort</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> w<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> h<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> force <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    w <span class="token operator">=</span> canvasWidth<span class="token punctuation">.</span>value <span class="token operator">*</span> h <span class="token operator">/</span> canvasHeight<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> w <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    h <span class="token operator">=</span> canvasHeight<span class="token punctuation">.</span>value <span class="token operator">*</span> w <span class="token operator">/</span> canvasWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>w <span class="token operator">||</span> <span class="token operator">!</span>h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cfg<span class="token punctuation">.</span>viewPortWidth <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> w<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cfg<span class="token punctuation">.</span>viewPortHeight <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> h<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  strokeWidth<span class="token punctuation">.</span>value <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortWidth <span class="token operator">/</span> canvasWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><h2>5.\u5173\u952E\u7684\u4E00\u6B65\uFF0C\u521D\u59CB\u5316\u753B\u5E03</h2><ul><li>\u6839\u636E\u4E00\u4E2Asvg\uFF0C\u753B\u5E03\u7684\u683C\u5B50\u5C3A\u5BF8\u521A\u597D\u81EA\u9002\u5E94\u8FD9\u4E2Asvg</li><li>\u521B\u5EFA\u753B\u5E03\u4E3B\u8981\u4E5F\u662F\u8C03\u7528 updateViewPort() \u53BB\u66F4\u6539\u5173\u952E\u7684\u89C6\u56FE\u53D8\u91CF\uFF0C\u7531\u4E8E\u5728\u5B50\u7EC4\u4EF6 Canvas.vue \u4E2D\u6709\u76D1\u542C\uFF0C\u6539\u53D8\u4E4B\u540E\uFF0C\u4F1A\u91CD\u65B0\u6E32\u67D3 svg dom</li></ul><pre class="language-ts"><code class="language-ts"><span class="token comment">/**
 * \u521D\u59CB\u5316\u753B\u5E03
 */</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">zoomAuto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u521D\u59CB\u5316\u9ED8\u8BA4\u7684icon</span>
<span class="token keyword">const</span> kDefaultPath <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">M 4 8 L 10 1 L 13 0 L 12 3 L 5 9 C 6 10 6 11 7 10 C 7 11 8 12 7 12 A 1.42 1.42 0 0 1 6 13 </span><span class="token template-punctuation string">\`</span></span>
<span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A 5 5 0 0 0 4 10 Q 3.5 9.9 3.5 10.5 T 2 11.8 T 1.2 11 T 2.5 9.5 T 3 9 A 5 5 90 0 0 0 7 A 1.42 1.42 0 0 1 1 6 </span><span class="token template-punctuation string">\`</span></span>
<span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C 1 5 2 6 3 6 C 2 7 3 7 4 8 M 10 1 L 10 3 L 12 3 L 10.2 2.8 L 10 1</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">zoomAuto</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rawPath <span class="token operator">=</span> kDefaultPath<span class="token punctuation">.</span>value
  <span class="token keyword">const</span> bbox <span class="token operator">=</span> <span class="token function">browserComputePathBoundingBox</span><span class="token punctuation">(</span>rawPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> k <span class="token operator">=</span> canvasHeight<span class="token punctuation">.</span>value <span class="token operator">/</span> canvasWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token keyword">let</span> w <span class="token operator">=</span> bbox<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> h <span class="token operator">=</span> bbox<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> h <span class="token operator">/</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    w <span class="token operator">=</span> h <span class="token operator">/</span> k<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    h <span class="token operator">=</span> k <span class="token operator">*</span> w<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">updateViewPort</span><span class="token punctuation">(</span>
    bbox<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
    bbox<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
    w<span class="token punctuation">,</span>
    h
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u8BA1\u7B97\u5F53\u524Dsvg\u7684box
 * @param path Svg
 */</span>
<span class="token keyword">function</span> <span class="token function">browserComputePathBoundingBox</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> svgNS <span class="token operator">=</span> <span class="token string">&#39;http://www.w3.org/2000/svg&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> svgEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>svgNS<span class="token punctuation">,</span> <span class="token string">&#39;svg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  svgEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;absolute&#39;</span><span class="token punctuation">;</span>
  svgEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">&#39;0px&#39;</span><span class="token punctuation">;</span>
  svgEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">&#39;0px&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> pathEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>svgNS<span class="token punctuation">,</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  pathEl<span class="token punctuation">.</span><span class="token function">setAttributeNS</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
  svgEl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>pathEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>svgEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> pathEl<span class="token punctuation">.</span><span class="token function">getBBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  svgEl<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p align="center"><img style="background:white;" src="https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/imagesPage 1.png" alt="icon-basic-edit - svg icon editor" width="300"></p><h2>6.\u7A97\u53E3\u5C3A\u5BF8\u6539\u53D8\uFF0C\u81EA\u9002\u5E94\u6539\u53D8\u7F51\u683C</h2><ul><li>\u524D\u9762\u6709\u901A\u8FC7 useElementBounding() \u65B9\u6CD5\u83B7\u53D6 canvas dom \u7684\u5C3A\u5BF8</li><li>\u73B0\u5728\u5BF9\u5176\u8FDB\u884C\u4E00\u4E2A\u76D1\u542C\uFF0C\u8C03\u7528 updateViewPort() \u65B9\u6CD5\u6539\u53D8\u89C6\u56FE\u53D8\u91CF</li></ul><pre class="language-ts"><code class="language-ts"><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>width<span class="token punctuation">,</span> height<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  canvasWidth<span class="token punctuation">.</span>value <span class="token operator">=</span> width<span class="token punctuation">.</span>value
  canvasHeight<span class="token punctuation">.</span>value <span class="token operator">=</span> height<span class="token punctuation">.</span>value

  <span class="token function">updateViewPort</span><span class="token punctuation">(</span>
    cfg<span class="token punctuation">.</span>viewPortX<span class="token punctuation">,</span>
    cfg<span class="token punctuation">.</span>viewPortY<span class="token punctuation">,</span>
    cfg<span class="token punctuation">.</span>viewPortWidth<span class="token punctuation">,</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token boolean">true</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><h2>7.\u6EDA\u8F6E\u653E\u5927\u7F29\u5C0F\u7F51\u683C\u80CC\u666F</h2><ul><li>\u5BF9\u9F20\u6807 wheel \u8FDB\u884C\u76D1\u542C\uFF0C \u8FD9\u91CC\u76F4\u63A5\u4F7F\u7528\u4E86 vueuse \u7684 useEventListener()</li><li>\u6839\u636E WheelEvent.deltaY -\u7EB5\u5411\u6EDA\u52A8\u91CF\uFF0C\u5224\u65AD\u5176\u7F29\u653E scale \u7684 \u503C</li><li>\u6839\u636E\u9F20\u6807\u5F53\u524D\u7684\u70B9\uFF0C\u5224\u65AD\u5176\u653E\u5927\u7F29\u5C0F\u7684\u65B9\u5411</li><li>\u8C03\u7528 updateViewPort() \u65B9\u6CD5\u6539\u53D8\u89C6\u56FE\u53D8\u91CF</li></ul><pre class="language-ts"><code class="language-ts"><span class="token comment">/**
 * \u6EDA\u8F6E\u653E\u5927\u7F29\u5C0F\u66F4\u65B0\u8BA1\u7B97\u89C6\u56FE ViewPort
 */</span>
<span class="token function">useEventListener</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> WheelEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> scale <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">1.005</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>deltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> pt <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">zoomViewPort</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> pt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">/**
 * \u66F4\u65B0viewport
 */</span>
<span class="token keyword">function</span> <span class="token function">zoomViewPort</span><span class="token punctuation">(</span>scale<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> pt<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pt <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">+</span> <span class="token number">0.5</span> <span class="token operator">*</span> cfg<span class="token punctuation">.</span>viewPortWidth<span class="token punctuation">,</span> y<span class="token operator">:</span> cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">+</span> <span class="token number">0.5</span> <span class="token operator">*</span> cfg<span class="token punctuation">.</span>viewPortHeight <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pt<span class="token punctuation">.</span>x <span class="token operator">-</span> cfg<span class="token punctuation">.</span>viewPortX<span class="token punctuation">)</span> <span class="token operator">-</span> scale <span class="token operator">*</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>x <span class="token operator">-</span> cfg<span class="token punctuation">.</span>viewPortX<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> y <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pt<span class="token punctuation">.</span>y <span class="token operator">-</span> cfg<span class="token punctuation">.</span>viewPortY<span class="token punctuation">)</span> <span class="token operator">-</span> scale <span class="token operator">*</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>y <span class="token operator">-</span> cfg<span class="token punctuation">.</span>viewPortY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> w <span class="token operator">=</span> scale <span class="token operator">*</span> cfg<span class="token punctuation">.</span>viewPortWidth<span class="token punctuation">;</span>
  <span class="token keyword">let</span> h <span class="token operator">=</span> scale <span class="token operator">*</span> cfg<span class="token punctuation">.</span>viewPortHeight<span class="token punctuation">;</span>
  <span class="token function">updateViewPort</span><span class="token punctuation">(</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/** \u9F20\u6807\u4E8B\u4EF6\u89E6\u53D1\u7684\u4F4D\u7F6Elocation */</span>
<span class="token keyword">function</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MouseEvent <span class="token operator">|</span> TouchEvent<span class="token punctuation">,</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useElementBounding</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>

  <span class="token keyword">const</span> touch <span class="token operator">=</span> event <span class="token keyword">instanceof</span> <span class="token class-name">MouseEvent</span> <span class="token operator">?</span> event <span class="token operator">:</span> event<span class="token punctuation">.</span>touches<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> x <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">+</span> <span class="token punctuation">(</span>touch<span class="token punctuation">.</span>clientX <span class="token operator">-</span> left<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">*</span> strokeWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">+</span> <span class="token punctuation">(</span>touch<span class="token punctuation">.</span>clientY <span class="token operator">-</span> top<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">*</span> strokeWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><h2>8.\u9F20\u6807\u62D6\u62FD\uFF0C\u81EA\u9002\u5E94\u6E32\u67D3\u7F51\u683C\u80CC\u666F</h2><ul><li>\u76D1\u542C\u9F20\u6807 mousedown \u3001 mousemove\u3001 mouseup</li><li>mousedown\u7684\u65F6\u5019\u5F00\u59CB\u8C03\u7528\u62D6\u62FD\u65B9\u6CD5\uFF0Cmouseup\u7684\u65F6\u5019\u505C\u6B62\u8C03\u7528\u62D6\u62FD\u65B9\u6CD5</li><li>\u62D6\u62FD\u7684\u65F6\u5019\uFF0C\u6839\u636E mousedown \uFF08draggedEvt\uFF09 \u7684\u5750\u6807 \u2013 oriPt\u548C\u9F20\u6807\u79FB\u52A8 mousemove \uFF08event\uFF09 \u7684\u5750\u6807 pt \u8BA1\u7B97\u5F53\u524D\u504F\u79FB\u7684\u5750\u6807</li><li>\u5F97\u5230\u65B0\u7684\u5750\u6807\u8C03\u7528 updateViewPort() \u65B9\u6CD5\u6539\u53D8\u89C6\u56FE\u53D8\u91CF</li><li>\u5C06 event \u8D4B\u503C\u7ED9 draggedEvt\u3002\u8FD9\u6837\u5C31\u53EF\u4EE5\u6D41\u7545\u7684\u62D6\u62FD\u4E86</li></ul><pre class="language-ts"><code class="language-ts">
<span class="token comment">/** \u62D6\u62FD\u79FB\u52A8\u753B\u5E03 canvas */</span>
<span class="token keyword">let</span> draggedEvt<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token function">useEventListener</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token string">&#39;mousedown&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  draggedEvt <span class="token operator">=</span> evt
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">useEventListener</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token string">&#39;mouseup&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">stopDrag</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">useEventListener</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">drag</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">/** \u9F20\u6807\u4E8B\u4EF6\u89E6\u53D1\u7684\u4F4D\u7F6Elocation */</span>
<span class="token keyword">function</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MouseEvent <span class="token operator">|</span> TouchEvent<span class="token punctuation">,</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useElementBounding</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>

  <span class="token keyword">const</span> touch <span class="token operator">=</span> event <span class="token keyword">instanceof</span> <span class="token class-name">MouseEvent</span> <span class="token operator">?</span> event <span class="token operator">:</span> event<span class="token punctuation">.</span>touches<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> x <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">+</span> <span class="token punctuation">(</span>touch<span class="token punctuation">.</span>clientX <span class="token operator">-</span> left<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">*</span> strokeWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">+</span> <span class="token punctuation">(</span>touch<span class="token punctuation">.</span>clientY <span class="token operator">-</span> top<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">*</span> strokeWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">drag</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MouseEvent <span class="token operator">|</span> TouchEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>draggedEvt<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">const</span> pt <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> pinchToZoomValue <span class="token operator">=</span> <span class="token function">pinchToZoom</span><span class="token punctuation">(</span>draggedEvt<span class="token punctuation">,</span> event<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pinchToZoomValue <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> w <span class="token operator">=</span> pinchToZoomValue<span class="token punctuation">.</span>zoom <span class="token operator">*</span> cfg<span class="token punctuation">.</span>viewPortWidth<span class="token punctuation">;</span>
      <span class="token keyword">const</span> h <span class="token operator">=</span> pinchToZoomValue<span class="token punctuation">.</span>zoom <span class="token operator">*</span> cfg<span class="token punctuation">.</span>viewPortHeight<span class="token punctuation">;</span>
      <span class="token keyword">const</span> x <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">+</span> pinchToZoomValue<span class="token punctuation">.</span>delta<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token punctuation">(</span>pinchToZoomValue<span class="token punctuation">.</span>center<span class="token punctuation">.</span>x <span class="token operator">-</span> cfg<span class="token punctuation">.</span>viewPortX<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> pinchToZoomValue<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> y <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">+</span> pinchToZoomValue<span class="token punctuation">.</span>delta<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token punctuation">(</span>pinchToZoomValue<span class="token punctuation">.</span>center<span class="token punctuation">.</span>y <span class="token operator">-</span> cfg<span class="token punctuation">.</span>viewPortY<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> pinchToZoomValue<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token function">updateViewPort</span><span class="token punctuation">(</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> oriPt <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>draggedEvt<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> x <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortX <span class="token operator">+</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>x <span class="token operator">-</span> pt<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
      <span class="token keyword">let</span> y <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortY <span class="token operator">+</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>y <span class="token operator">-</span> pt<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
      <span class="token keyword">let</span> w <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortWidth
      <span class="token keyword">let</span> h <span class="token operator">=</span> cfg<span class="token punctuation">.</span>viewPortHeight

      <span class="token function">updateViewPort</span><span class="token punctuation">(</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    draggedEvt <span class="token operator">=</span> event<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">pinchToZoom</span><span class="token punctuation">(</span>previousEvent<span class="token operator">:</span> MouseEvent <span class="token operator">|</span> TouchEvent<span class="token punctuation">,</span> event<span class="token operator">:</span> MouseEvent <span class="token operator">|</span> TouchEvent<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>TouchEvent
    <span class="token operator">&amp;&amp;</span> previousEvent <span class="token keyword">instanceof</span> <span class="token class-name">TouchEvent</span>
    <span class="token operator">&amp;&amp;</span> event <span class="token keyword">instanceof</span> <span class="token class-name">TouchEvent</span>
    <span class="token operator">&amp;&amp;</span> previousEvent<span class="token punctuation">.</span>touches<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">2</span>
    <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>touches<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pt <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> pt2 <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> oriPt <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>previousEvent<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> oriPt2 <span class="token operator">=</span> <span class="token function">eventToLocation</span><span class="token punctuation">(</span>previousEvent<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ptm <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>x <span class="token operator">+</span> pt2<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>y <span class="token operator">+</span> pt2<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> oriPtm <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>x <span class="token operator">+</span> oriPt2<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>y <span class="token operator">+</span> oriPt2<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> delta <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> oriPtm<span class="token punctuation">.</span>x <span class="token operator">-</span> ptm<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y<span class="token operator">:</span> oriPtm<span class="token punctuation">.</span>y <span class="token operator">-</span> ptm<span class="token punctuation">.</span>y <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> k <span class="token operator">=</span>
      Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>x <span class="token operator">-</span> oriPt2<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>x <span class="token operator">-</span> oriPt2<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>y <span class="token operator">-</span> oriPt2<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>oriPt<span class="token punctuation">.</span>y <span class="token operator">-</span> oriPt2<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span>
      Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pt<span class="token punctuation">.</span>x <span class="token operator">-</span> pt2<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>x <span class="token operator">-</span> pt2<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>y <span class="token operator">-</span> pt2<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>y <span class="token operator">-</span> pt2<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> zoom<span class="token operator">:</span> k<span class="token punctuation">,</span> delta<span class="token punctuation">,</span> center<span class="token operator">:</span> ptm <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">stopDrag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  draggedEvt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><h2>points \u7F51\u683C\u80CC\u666F</h2><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span>
  <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in pointsGrid<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item[0]<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item[1]<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#99999990<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strokeWidth<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
</code></pre><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> pointsGrid <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">/** xGrid\u548CyGrid\uFF0C\u590D\u6742\u5EA6O(n\xB2) */</span>
<span class="token keyword">const</span> <span class="token function-variable function">mergeArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>it<span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span>item<span class="token punctuation">,</span>it<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
pointsGrid<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">mergeArray</span><span class="token punctuation">(</span>xGrid<span class="token punctuation">.</span>value<span class="token punctuation">,</span>yGrid<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre>`,32),c=[e],d=[],g={__name:"Svg\u7F51\u683C\u80CC\u666F",setup(u,{expose:n}){return n({frontmatter:{meta:[]}}),s({meta:[]}),(i,r)=>(a(),t("div",o,c))}};export{g as default,d as meta};
